diff -urN xv6-labs/.git/COMMIT_EDITMSG xv6-labs-2024/.git/COMMIT_EDITMSG
--- xv6-labs/.git/COMMIT_EDITMSG	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/.git/COMMIT_EDITMSG	2024-10-19 15:37:32.000000000 +0700
@@ -0,0 +1 @@
+S·ª≠a ƒë·ªïi file sleep.c
diff -urN xv6-labs/.git/config xv6-labs-2024/.git/config
--- xv6-labs/.git/config	2024-10-20 23:54:42.092477943 +0700
+++ xv6-labs-2024/.git/config	2024-10-23 16:54:29.000000000 +0700
@@ -3,10 +3,5 @@
 	filemode = true
 	bare = false
 	logallrefupdates = true
-[remote "origin"]
-	url = git://g.csail.mit.edu/xv6-labs-2024
-	fetch = +refs/heads/*:refs/remotes/origin/*
-[branch "util"]
-	remote = origin
-	merge = refs/heads/util
+[branch "main"]
 	vscode-merge-base = origin/util
diff -urN xv6-labs/.git/HEAD xv6-labs-2024/.git/HEAD
--- xv6-labs/.git/HEAD	2024-10-20 23:44:38.684153110 +0700
+++ xv6-labs-2024/.git/HEAD	2024-10-19 15:12:08.000000000 +0700
@@ -1 +1 @@
-ref: refs/heads/util
+ref: refs/heads/main
Binary files xv6-labs/.git/index and xv6-labs-2024/.git/index differ
diff -urN xv6-labs/.git/logs/HEAD xv6-labs-2024/.git/logs/HEAD
--- xv6-labs/.git/logs/HEAD	2024-10-20 23:44:38.684153110 +0700
+++ xv6-labs-2024/.git/logs/HEAD	2024-10-19 15:37:32.000000000 +0700
@@ -1 +1,5 @@
-0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab hien <hien@hien-VMware-Virtual-Platform.(none)> 1729442678 +0700	clone: from git://g.csail.mit.edu/xv6-labs-2024
+0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab anhtu <anhtu@AnhTu.> 1728966570 +0000	clone: from git://g.csail.mit.edu/xv6-labs-2024
+79e8024d61c3dd92ccf064fc67bb99cb999f70ab 0000000000000000000000000000000000000000 anhtu <anhtu@AnhTu.> 1729325528 +0000	Branch: renamed refs/heads/util to refs/heads/main
+0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab anhtu <anhtu@AnhTu.> 1729325528 +0000	Branch: renamed refs/heads/util to refs/heads/main
+79e8024d61c3dd92ccf064fc67bb99cb999f70ab a0fffb70643e8d1171738f27185bb7cafbc134e8 Tran Anh Tu <trananhtu01012004@gmail.com> 1729325782 +0000	commit: OS_HCMUS
+a0fffb70643e8d1171738f27185bb7cafbc134e8 05194d53fa046ce40aa05965969b63261833320a Tran Anh Tu <trananhtu01012004@gmail.com> 1729327052 +0000	commit: S·ª≠a ƒë·ªïi file sleep.c
diff -urN xv6-labs/.git/logs/refs/heads/main xv6-labs-2024/.git/logs/refs/heads/main
--- xv6-labs/.git/logs/refs/heads/main	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/.git/logs/refs/heads/main	2024-10-19 15:37:32.000000000 +0700
@@ -0,0 +1,4 @@
+0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab anhtu <anhtu@AnhTu.> 1728966570 +0000	clone: from git://g.csail.mit.edu/xv6-labs-2024
+79e8024d61c3dd92ccf064fc67bb99cb999f70ab 79e8024d61c3dd92ccf064fc67bb99cb999f70ab anhtu <anhtu@AnhTu.> 1729325528 +0000	Branch: renamed refs/heads/util to refs/heads/main
+79e8024d61c3dd92ccf064fc67bb99cb999f70ab a0fffb70643e8d1171738f27185bb7cafbc134e8 Tran Anh Tu <trananhtu01012004@gmail.com> 1729325782 +0000	commit: OS_HCMUS
+a0fffb70643e8d1171738f27185bb7cafbc134e8 05194d53fa046ce40aa05965969b63261833320a Tran Anh Tu <trananhtu01012004@gmail.com> 1729327052 +0000	commit: S·ª≠a ƒë·ªïi file sleep.c
diff -urN xv6-labs/.git/logs/refs/heads/util xv6-labs-2024/.git/logs/refs/heads/util
--- xv6-labs/.git/logs/refs/heads/util	2024-10-20 23:44:38.684153110 +0700
+++ xv6-labs-2024/.git/logs/refs/heads/util	1970-01-01 08:00:00.000000000 +0800
@@ -1 +0,0 @@
-0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab hien <hien@hien-VMware-Virtual-Platform.(none)> 1729442678 +0700	clone: from git://g.csail.mit.edu/xv6-labs-2024
diff -urN xv6-labs/.git/logs/refs/remotes/origin/HEAD xv6-labs-2024/.git/logs/refs/remotes/origin/HEAD
--- xv6-labs/.git/logs/refs/remotes/origin/HEAD	2024-10-20 23:44:38.684153110 +0700
+++ xv6-labs-2024/.git/logs/refs/remotes/origin/HEAD	1970-01-01 08:00:00.000000000 +0800
@@ -1 +0,0 @@
-0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab hien <hien@hien-VMware-Virtual-Platform.(none)> 1729442678 +0700	clone: from git://g.csail.mit.edu/xv6-labs-2024
diff -urN xv6-labs/.git/objects/05/194d53fa046ce40aa05965969b63261833320a xv6-labs-2024/.git/objects/05/194d53fa046ce40aa05965969b63261833320a
--- xv6-labs/.git/objects/05/194d53fa046ce40aa05965969b63261833320a	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/.git/objects/05/194d53fa046ce40aa05965969b63261833320a	2024-10-19 15:37:32.000000000 +0700
@@ -0,0 +1 @@
+x•éÀm√0sf{`Ïí+ë#©!n`I.#˙2UH)#¯öF‹âŸÉﬂmÊ0xiùÁ±ÇÌ˙∑∫©ßúRQ«*ŸÈ1GeÊÇBjãc€g‰.ô´l∫T,•Dè=;ô»ìw°XO°ã—')1Qã#{÷.õ,πpŸ·T»2‘	…"Ú«˜,„tHÎ|ÚˆË¨«Œ¬;∂ôf€’™/EÃ◊„˛'ˇÛ∏ˇéP∆I·6©^…<'≠R8
\ No newline at end of file
Binary files xv6-labs/.git/objects/26/8eed00b323ed68239b13780748137259b7a4e9 and xv6-labs-2024/.git/objects/26/8eed00b323ed68239b13780748137259b7a4e9 differ
Binary files xv6-labs/.git/objects/3f/3c28768f5b1037df3518165a9ba317c9fc4d0d and xv6-labs-2024/.git/objects/3f/3c28768f5b1037df3518165a9ba317c9fc4d0d differ
Binary files xv6-labs/.git/objects/4c/dccfe34ead3e9dbe444b8878a1e2f3426d045c and xv6-labs-2024/.git/objects/4c/dccfe34ead3e9dbe444b8878a1e2f3426d045c differ
Binary files xv6-labs/.git/objects/61/6eed394a879ed2bcbcdf9bbd34d05f280b2457 and xv6-labs-2024/.git/objects/61/6eed394a879ed2bcbcdf9bbd34d05f280b2457 differ
Binary files xv6-labs/.git/objects/66/8ea12fe441f034bc9b9d436f063fd0f1dea2f7 and xv6-labs-2024/.git/objects/66/8ea12fe441f034bc9b9d436f063fd0f1dea2f7 differ
Binary files xv6-labs/.git/objects/9e/e289869642260226055c42e61268a72e581b84 and xv6-labs-2024/.git/objects/9e/e289869642260226055c42e61268a72e581b84 differ
diff -urN xv6-labs/.git/objects/a0/fffb70643e8d1171738f27185bb7cafbc134e8 xv6-labs-2024/.git/objects/a0/fffb70643e8d1171738f27185bb7cafbc134e8
--- xv6-labs/.git/objects/a0/fffb70643e8d1171738f27185bb7cafbc134e8	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/.git/objects/a0/fffb70643e8d1171738f27185bb7cafbc134e8	2024-10-19 15:16:22.000000000 +0700
@@ -0,0 +1,2 @@
+x•é¡J∆0Ñ=Á)ˆ.»fì&Y¯≈ãÒ–zñdì¸-òVJ˙˛Êò√|√»—⁄÷Å?Ù≥p⁄ïí€<óLIí‰ )ec3Nï&≤ìWøÒ,{áQ
+H6;-&g&ëäŒVq>%fÊÍ1&Øæ',g‹·u_aπ‡÷Gà˚⁄/‘®	—æ‹[‹~û‰hœ†=±°…ÇGRÉé´Ω¸kD}ŒﬂÔo_≥˙Œ¯IO
\ No newline at end of file
Binary files xv6-labs/.git/objects/a6/7ed2d92589640389b0c3a49f65877caf432e5d and xv6-labs-2024/.git/objects/a6/7ed2d92589640389b0c3a49f65877caf432e5d differ
Binary files xv6-labs/.git/objects/fe/91d56b6fe091b991272a309b594ecfd5ff08e9 and xv6-labs-2024/.git/objects/fe/91d56b6fe091b991272a309b594ecfd5ff08e9 differ
Binary files xv6-labs/.git/objects/pack/pack-7420e44fe0af7adde5e0a616647f184ad6eb33c5.idx and xv6-labs-2024/.git/objects/pack/pack-7420e44fe0af7adde5e0a616647f184ad6eb33c5.idx differ
Binary files xv6-labs/.git/objects/pack/pack-7420e44fe0af7adde5e0a616647f184ad6eb33c5.pack and xv6-labs-2024/.git/objects/pack/pack-7420e44fe0af7adde5e0a616647f184ad6eb33c5.pack differ
Binary files xv6-labs/.git/objects/pack/pack-7420e44fe0af7adde5e0a616647f184ad6eb33c5.rev and xv6-labs-2024/.git/objects/pack/pack-7420e44fe0af7adde5e0a616647f184ad6eb33c5.rev differ
Binary files xv6-labs/.git/objects/pack/pack-f15601b23abc2f93207f60243ae8726913c13584.idx and xv6-labs-2024/.git/objects/pack/pack-f15601b23abc2f93207f60243ae8726913c13584.idx differ
Binary files xv6-labs/.git/objects/pack/pack-f15601b23abc2f93207f60243ae8726913c13584.pack and xv6-labs-2024/.git/objects/pack/pack-f15601b23abc2f93207f60243ae8726913c13584.pack differ
Binary files xv6-labs/.git/objects/pack/pack-f15601b23abc2f93207f60243ae8726913c13584.rev and xv6-labs-2024/.git/objects/pack/pack-f15601b23abc2f93207f60243ae8726913c13584.rev differ
diff -urN xv6-labs/.git/packed-refs xv6-labs-2024/.git/packed-refs
--- xv6-labs/.git/packed-refs	2024-10-20 23:44:38.684153110 +0700
+++ xv6-labs-2024/.git/packed-refs	2024-10-23 16:54:29.000000000 +0700
@@ -1,8 +1 @@
 # pack-refs with: peeled fully-peeled sorted 
-19fa72d7dccf193c7e09789db708443736c2954c refs/remotes/origin/cow
-0b94a6a45fc79ad87112d16622bb5f2f130c893b refs/remotes/origin/net
-db30f8d9f46732d926995fb97a2ea0362f0654ee refs/remotes/origin/pgtbl
-de247db5e6384b138f270e0a7c745989b5a9c23b refs/remotes/origin/riscv
-d5b09ff4571e07f6d996fdf7ce1533afc19a6978 refs/remotes/origin/syscall
-814d126edf03b5498dbc7e0796190b938837a851 refs/remotes/origin/traps
-79e8024d61c3dd92ccf064fc67bb99cb999f70ab refs/remotes/origin/util
diff -urN xv6-labs/.git/refs/heads/main xv6-labs-2024/.git/refs/heads/main
--- xv6-labs/.git/refs/heads/main	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/.git/refs/heads/main	2024-10-19 15:37:32.000000000 +0700
@@ -0,0 +1 @@
+05194d53fa046ce40aa05965969b63261833320a
diff -urN xv6-labs/.git/refs/heads/util xv6-labs-2024/.git/refs/heads/util
--- xv6-labs/.git/refs/heads/util	2024-10-20 23:44:38.684153110 +0700
+++ xv6-labs-2024/.git/refs/heads/util	1970-01-01 08:00:00.000000000 +0800
@@ -1 +0,0 @@
-79e8024d61c3dd92ccf064fc67bb99cb999f70ab
diff -urN xv6-labs/.git/refs/remotes/origin/HEAD xv6-labs-2024/.git/refs/remotes/origin/HEAD
--- xv6-labs/.git/refs/remotes/origin/HEAD	2024-10-20 23:44:38.684153110 +0700
+++ xv6-labs-2024/.git/refs/remotes/origin/HEAD	1970-01-01 08:00:00.000000000 +0800
@@ -1 +0,0 @@
-ref: refs/remotes/origin/util
diff -urN xv6-labs/Makefile xv6-labs-2024/Makefile
--- xv6-labs/Makefile	2024-10-23 21:24:53.079252299 +0700
+++ xv6-labs-2024/Makefile	2024-10-23 15:26:38.000000000 +0700
@@ -194,7 +194,11 @@
 	$U/_grind\
 	$U/_wc\
 	$U/_zombie\
-	
+	$U/_pingpong\
+	$U/_sleep\
+	$U/_xargs\
+	$U/_find\
+	$U/_primes\
 
 
 
diff -urN xv6-labs/user/find.c xv6-labs-2024/user/find.c
--- xv6-labs/user/find.c	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/user/find.c	2024-10-23 16:54:09.000000000 +0700
@@ -0,0 +1,104 @@
+#include "kernel/types.h"
+#include "kernel/stat.h"
+#include "user/user.h"
+#include "kernel/fs.h"
+#include "kernel/fcntl.h"
+
+char* fmtname(char *path) {
+    static char buffer[DIRSIZ+1];
+    char *p;
+
+    // Find first character after last slash.
+    for(p = path + strlen(path); p >= path && *p != '/'; p--)
+        ;
+    p++;
+
+    // Return blank-padded name if too long, full name otherwise.
+    if(strlen(p) >= DIRSIZ) {
+        return p;
+    }
+    memmove(buffer, p, strlen(p));
+    memset(buffer+strlen(p), '\0', DIRSIZ-strlen(p));
+    return buffer;
+}
+
+void find(char *path, char* name) {
+    char buffer[512], *p;
+    int fd;
+    struct dirent de;
+    struct stat st;
+
+    if((fd = open(path, O_RDONLY)) < 0) {
+        fprintf(2, "find: can't open %s\n", path);
+        return;
+    }
+
+    if(fstat(fd, &st) < 0) {
+        fprintf(2, "find: can't stat %s\n", path);
+        close(fd);
+        return;
+    }
+
+    switch(st.type) {
+        case T_FILE:
+            if (strcmp(fmtname(path), name) == 0) {
+                printf("%s\n", path);
+            }
+            break;
+
+        case T_DIR:
+            if(strlen(path) + 1 + DIRSIZ + 1 > sizeof(buffer)) {
+                printf("find: path too long\n");
+                close(fd);
+                return;
+            }
+            strcpy(buffer, path);
+            p = buffer + strlen(buffer);
+            *p++ = '/';
+
+            while(read(fd, &de, sizeof(de)) == sizeof(de)) {
+                if(de.inum == 0)
+                    continue;
+
+                memmove(p, de.name, DIRSIZ);
+                p[DIRSIZ] = 0;
+
+                if(stat(buffer, &st) < 0) {
+                    printf("find: cannot stat %s\n", buffer);
+                    continue;
+                }
+
+                // if (st.type == T_DIR) {
+                //     if (strcmp(fmtname(buffer), ".") != 0 && strcmp(fmtname(buffer), "..") != 0) {
+                //         find(buffer, name);
+                //     }
+                // } else if (st.type == T_FILE) {
+                //     if (strcmp(fmtname(buffer), name) == 0) {
+                //         printf("%s\n", buffer);
+                //     }
+                // }
+                
+                if (strcmp(name, fmtname(buffer)) == 0) printf("%s\n", buffer);
+                else if (st.type == T_DIR){
+                    if (strcmp(fmtname(buffer), ".") != 0 && strcmp(fmtname(buffer), "..") != 0) {
+                        find(buffer, name);
+                    }
+                }
+                
+            }
+            break;
+    }
+
+    close(fd);
+}
+
+int main(int argc, char *argv[]) {
+    if(argc < 3 || argc > 4) {
+        printf("Usage: find [path] [expression]\n");
+        exit(1);
+    }else {
+        //printf("%s\n", argv[2]);
+        find(argv[1], argv[2]);
+        exit(0);
+    }
+}
diff -urN xv6-labs/user/pingpong.c xv6-labs-2024/user/pingpong.c
--- xv6-labs/user/pingpong.c	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/user/pingpong.c	2024-10-23 16:43:22.000000000 +0700
@@ -0,0 +1,43 @@
+#include "kernel/types.h"
+#include "user/user.h"
+
+int main(int argc, char* argv[]) {
+    int p1[2], p2[2];
+    char buf[1];
+    int pid = 0;
+    
+    
+    pipe(p1);
+    pipe(p2);
+    
+    if ((pid = fork()) > 0) { 
+        close(p1[0]);  
+        close(p2[1]);  
+        
+        //printf("Parent %d: sending ping\n", getpid());
+        write(p1[1], "x", 1);  
+        
+        read(p2[0], buf, 1);  
+        printf("%d: received pong\n", getpid());
+        
+        close(p1[1]);
+        close(p2[0]);
+    } else if (pid == 0) {  
+        close(p1[1]);  
+        close(p2[0]);  
+        
+        read(p1[0], buf, 1);  
+        printf("%d: received ping\n", getpid());
+        
+       // printf("Child %d: sending pong\n", getpid());
+        write(p2[1], "x", 1);  
+        
+        close(p1[0]);
+        close(p2[1]);
+    } else {
+        printf("Creatition Fork failed\n");
+        exit(1);
+    }
+
+    exit(0);
+}
diff -urN xv6-labs/user/primes.c xv6-labs-2024/user/primes.c
--- xv6-labs/user/primes.c	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/user/primes.c	2024-10-23 15:26:19.000000000 +0700
@@ -0,0 +1,57 @@
+#include "kernel/types.h"
+#include "kernel/stat.h"
+#include "user/user.h"
+
+void primes(int fd) {
+    int p[2];
+    int num;
+
+    if (pipe(p) < 0) {
+        printf("pipe failed\n");
+        exit(0);
+    }
+
+    if (read(fd, &num, sizeof(num)) > 0) {
+        printf("prime %d\n", num);
+
+        if (fork() == 0) {
+            close(p[0]);
+            int next_num;
+            while (read(fd, &next_num, sizeof(next_num)) > 0) {
+                if (next_num % num != 0) {
+                    write(p[1], &next_num, sizeof(next_num));
+                }
+            }
+            close(p[1]);
+            exit(0);
+        } else {
+            close(p[1]);
+            close(fd);
+            primes(p[0]);
+            wait(0);
+        }
+    }
+    close(fd);
+}
+
+int main(int argc, char *argv[]) {
+    int p[2];
+    if (pipe(p) < 0) {
+        printf("pipe failed\n");
+        exit(0);
+    }
+
+    if (fork() == 0) {
+        close(p[0]);
+        for (int i = 2; i <= 280; i++) {
+            write(p[1], &i, sizeof(i));
+        }
+        close(p[1]);
+        exit(0);
+    } else {
+        close(p[1]);
+        primes(p[0]);
+        wait(0);
+    }
+    exit(0);
+}
diff -urN xv6-labs/user/sleep.c xv6-labs-2024/user/sleep.c
--- xv6-labs/user/sleep.c	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/user/sleep.c	2024-10-23 16:47:00.000000000 +0700
@@ -0,0 +1,23 @@
+#include "kernel/types.h"
+#include "user/user.h"
+
+int main(int argc, char *argv[]) {
+   
+    if (argc < 2) {
+        fprintf(2, "Enter tick over 2, please\n");
+        exit(1);
+    }
+    
+   
+    int ticks = atoi(argv[1]);
+
+    if(ticks <= 0){
+      printf("Invalid argument, thanks\n");
+      exit(1);
+    }
+
+   
+    sleep(ticks);
+
+    exit(0);
+}
diff -urN xv6-labs/user/xargs.c xv6-labs-2024/user/xargs.c
--- xv6-labs/user/xargs.c	1970-01-01 08:00:00.000000000 +0800
+++ xv6-labs-2024/user/xargs.c	2024-10-23 16:47:33.000000000 +0700
@@ -0,0 +1,86 @@
+#include "kernel/types.h"
+#include "kernel/stat.h"
+#include "user/user.h"
+#include "kernel/param.h"
+
+int main(int argc, char *argv[]) {
+
+    char buf[512];
+    char *nargv[MAXARG];  
+    int n = 0;            
+    int maxargs = 1;       
+    int argcount = 0;      
+    char *p = buf;
+    int read_bytes;
+
+    
+    if (argc < 2) {
+        fprintf(2, "Usage: xargs [-n num] <command>, thanks\n");
+        exit(1);
+    }
+
+    
+    if (strcmp(argv[1], "-n") == 0) {
+        if (argc < 4) {
+            fprintf(2, "Usage: xargs [-n num] <command>, thanks\n");
+            exit(1);
+        }
+        maxargs = atoi(argv[2]);
+        argv += 2;  
+        argc -= 2;
+    }
+
+    
+    for (int i = 1; i < argc; i++) {
+        nargv[n] = argv[i];
+        n++;
+    }
+
+    
+    while (1) {
+        p = buf;
+
+        while ((read_bytes = read(0, p, 1)) > 0 && *p != '\n') {
+            p++;
+        }
+
+       
+        if (read_bytes == 0 && p == buf) {
+            break;
+        }
+
+        *p = '\0';  
+
+        
+        nargv[n + argcount] = buf;
+        argcount++;
+
+       
+        if (argcount == maxargs) {
+            nargv[n + argcount] = 0;  
+
+            if (fork() == 0) {
+                exec(nargv[0], nargv); 
+                fprintf(2, "exec %s failed\n", nargv[0]);
+                exit(1);
+            } else {
+                wait(0);  
+            }
+            argcount = 0;  
+        }
+    }
+
+    
+    if (argcount > 0) {
+        nargv[n + argcount] = 0;  
+        if (fork() == 0) {
+            exec(nargv[0], nargv);
+            fprintf(2, "exec %s failed\n", nargv[0]);
+            exit(1);
+        } else {
+            wait(0);  
+        }
+    }
+
+    exit(0);
+}
