diff -ru xv6-labs-2024/.git/config xv6-labs-2024-1/.git/config
--- xv6-labs-2024/.git/config	2024-11-05 23:35:28.057060995 +0700
+++ xv6-labs-2024-1/.git/config	2024-10-30 23:29:21.095315687 +0700
@@ -9,3 +9,4 @@
 [branch "util"]
 	remote = origin
 	merge = refs/heads/util
+	vscode-merge-base = origin/util
Binary files xv6-labs-2024/.git/index and xv6-labs-2024-1/.git/index differ
diff -ru xv6-labs-2024/.git/logs/HEAD xv6-labs-2024-1/.git/logs/HEAD
--- xv6-labs-2024/.git/logs/HEAD	2024-11-05 23:35:28.052061028 +0700
+++ xv6-labs-2024-1/.git/logs/HEAD	2024-10-30 23:26:05.288378060 +0700
@@ -1 +1 @@
-0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab hien <hien@hien-VMware-Virtual-Platform.(none)> 1730824528 +0700	clone: from git://g.csail.mit.edu/xv6-labs-2024
+0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab hien <hien@hien-VMware-Virtual-Platform.(none)> 1730305565 +0700	clone: from git://g.csail.mit.edu/xv6-labs-2024
diff -ru xv6-labs-2024/.git/logs/refs/heads/util xv6-labs-2024-1/.git/logs/refs/heads/util
--- xv6-labs-2024/.git/logs/refs/heads/util	2024-11-05 23:35:28.052061028 +0700
+++ xv6-labs-2024-1/.git/logs/refs/heads/util	2024-10-30 23:26:05.288378060 +0700
@@ -1 +1 @@
-0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab hien <hien@hien-VMware-Virtual-Platform.(none)> 1730824528 +0700	clone: from git://g.csail.mit.edu/xv6-labs-2024
+0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab hien <hien@hien-VMware-Virtual-Platform.(none)> 1730305565 +0700	clone: from git://g.csail.mit.edu/xv6-labs-2024
diff -ru xv6-labs-2024/.git/logs/refs/remotes/origin/HEAD xv6-labs-2024-1/.git/logs/refs/remotes/origin/HEAD
--- xv6-labs-2024/.git/logs/refs/remotes/origin/HEAD	2024-11-05 23:35:28.051061035 +0700
+++ xv6-labs-2024-1/.git/logs/refs/remotes/origin/HEAD	2024-10-30 23:26:05.287378046 +0700
@@ -1 +1 @@
-0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab hien <hien@hien-VMware-Virtual-Platform.(none)> 1730824528 +0700	clone: from git://g.csail.mit.edu/xv6-labs-2024
+0000000000000000000000000000000000000000 79e8024d61c3dd92ccf064fc67bb99cb999f70ab hien <hien@hien-VMware-Virtual-Platform.(none)> 1730305565 +0700	clone: from git://g.csail.mit.edu/xv6-labs-2024
diff -ru xv6-labs-2024/kernel/defs.h xv6-labs-2024-1/kernel/defs.h
--- xv6-labs-2024/kernel/defs.h	2024-11-05 23:35:28.064060947 +0700
+++ xv6-labs-2024-1/kernel/defs.h	2024-11-05 23:18:49.118887590 +0700
@@ -8,7 +8,7 @@
 struct sleeplock;
 struct stat;
 struct superblock;
-
+struct sysinfo; 
 // bio.c
 void            binit(void);
 struct buf*     bread(uint, uint);
@@ -16,7 +16,7 @@
 void            bwrite(struct buf*);
 void            bpin(struct buf*);
 void            bunpin(struct buf*);
-
+int             freemem(void);
 // console.c
 void            consoleinit(void);
 void            consoleintr(int);
@@ -71,6 +71,7 @@
 void            end_op(void);
 
 // pipe.c
+int             nproc(void);
 int             pipealloc(struct file**, struct file**);
 void            pipeclose(struct pipe*, int);
 int             piperead(struct pipe*, uint64, int);
@@ -113,6 +114,8 @@
 // spinlock.c
 void            acquire(struct spinlock*);
 int             holding(struct spinlock*);
+// sysinfo.c
+int             systeminfo(uint64);
 void            initlock(struct spinlock*, char*);
 void            release(struct spinlock*);
 void            push_off(void);
diff -ru xv6-labs-2024/kernel/kalloc.c xv6-labs-2024-1/kernel/kalloc.c
--- xv6-labs-2024/kernel/kalloc.c	2024-11-05 23:35:28.065060941 +0700
+++ xv6-labs-2024-1/kernel/kalloc.c	2024-11-05 23:13:01.116259430 +0700
@@ -80,3 +80,20 @@
     memset((char*)r, 5, PGSIZE); // fill with junk
   return (void*)r;
 }
+
+// Get the number of bytes of free memory
+int
+freemem(void)
+{
+
+  int n = 0;
+  struct run* r;
+  acquire(&kmem.lock);
+  
+  for (r = kmem.freelist; r; r = r->next)
+    n++;
+
+  release(&kmem.lock);
+
+  return n * PGSIZE;
+}
\ No newline at end of file
diff -ru xv6-labs-2024/kernel/proc.c xv6-labs-2024-1/kernel/proc.c
--- xv6-labs-2024/kernel/proc.c	2024-11-05 23:35:28.067060927 +0700
+++ xv6-labs-2024-1/kernel/proc.c	2024-11-05 23:12:27.910024249 +0700
@@ -29,6 +29,12 @@
 // Allocate a page for each process's kernel stack.
 // Map it high in memory, followed by an invalid
 // guard page.
+
+uint64 sys_trace(int mask) {
+  argint(0, &myproc()->trace_mask);
+  return 0;
+}
+
 void
 proc_mapstacks(pagetable_t kpgtbl)
 {
@@ -299,6 +305,8 @@
   // copy saved user registers.
   *(np->trapframe) = *(p->trapframe);
 
+  np->trace_mask = p->trace_mask;
+
   // Cause fork to return 0 in the child.
   np->trapframe->a0 = 0;
 
@@ -693,3 +701,21 @@
     printf("\n");
   }
 }
+
+// Get the number of processes whose state is not UNUSED. 
+int
+nproc(void)
+{
+  
+  int n = 0;
+  struct proc* p;
+
+  for(p = proc; p < &proc[NPROC]; p++) {
+    acquire(&p->lock);
+    if(p->state != UNUSED)
+      ++n;
+    release(&p->lock);
+  }
+
+  return n;
+}
\ No newline at end of file
diff -ru xv6-labs-2024/kernel/proc.h xv6-labs-2024-1/kernel/proc.h
--- xv6-labs-2024/kernel/proc.h	2024-11-05 23:35:28.067060927 +0700
+++ xv6-labs-2024-1/kernel/proc.h	2024-10-30 23:31:12.770208924 +0700
@@ -104,4 +104,5 @@
   struct file *ofile[NOFILE];  // Open files
   struct inode *cwd;           // Current directory
   char name[16];               // Process name (debugging)
+  int trace_mask;            
 };
diff -ru xv6-labs-2024/kernel/syscall.c xv6-labs-2024-1/kernel/syscall.c
--- xv6-labs-2024/kernel/syscall.c	2024-11-05 23:35:28.067060927 +0700
+++ xv6-labs-2024-1/kernel/syscall.c	2024-11-05 23:18:51.284867235 +0700
@@ -101,7 +101,8 @@
 extern uint64 sys_link(void);
 extern uint64 sys_mkdir(void);
 extern uint64 sys_close(void);
-
+extern uint64 sys_trace(void);
+extern uint64 sys_sysinfo(void);
 // An array mapping syscall numbers from syscall.h
 // to the function that handles the system call.
 static uint64 (*syscalls[])(void) = {
@@ -126,6 +127,15 @@
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_trace]   sys_trace,
+[SYS_sysinfo] sys_sysinfo,
+};
+
+char *syscall_names[] = {
+  "fork", "exit", "wait", "pipe", "read", "kill",
+  "exec", "fstat", "chdir", "dup", "getpid",
+  "sbrk", "sleep", "uptime", "open", "write",
+  "mknod", "unlink", "link", "mkdir", "close", "trace"
 };
 
 void
@@ -139,6 +149,9 @@
     // Use num to lookup the system call function for num, call it,
     // and store its return value in p->trapframe->a0
     p->trapframe->a0 = syscalls[num]();
+    if(p->trace_mask & (1 << num) ) {
+      printf("%d: syscall %s -> %lu\n", p->pid, syscall_names[num - 1], p->trapframe->a0);
+    }
   } else {
     printf("%d %s: unknown sys call %d\n",
             p->pid, p->name, num);
diff -ru xv6-labs-2024/kernel/syscall.h xv6-labs-2024-1/kernel/syscall.h
--- xv6-labs-2024/kernel/syscall.h	2024-11-05 23:35:28.068060921 +0700
+++ xv6-labs-2024-1/kernel/syscall.h	2024-11-05 23:13:56.388674195 +0700
@@ -20,3 +20,5 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_trace  22
+#define SYS_sysinfo 23
\ No newline at end of file
Only in xv6-labs-2024-1/kernel: sysinfo.c
Only in xv6-labs-2024-1/kernel: sysinfo.h
diff -ru xv6-labs-2024/kernel/sysproc.c xv6-labs-2024-1/kernel/sysproc.c
--- xv6-labs-2024/kernel/sysproc.c	2024-11-05 23:35:28.069060914 +0700
+++ xv6-labs-2024-1/kernel/sysproc.c	2024-11-05 23:10:14.497609900 +0700
@@ -91,3 +91,18 @@
   release(&tickslock);
   return xticks;
 }
+
+uint64
+sys_sysinfo(void)
+{
+    uint64 info; 
+
+    argaddr(0, &info);
+
+    if (systeminfo(info) < 0) {
+        return -1; 
+    }
+
+    
+    return 0;
+}
\ No newline at end of file
diff -ru xv6-labs-2024/Makefile xv6-labs-2024-1/Makefile
--- xv6-labs-2024/Makefile	2024-11-05 23:35:28.063060954 +0700
+++ xv6-labs-2024-1/Makefile	2024-11-05 23:19:57.941099660 +0700
@@ -30,6 +30,7 @@
   $K/sysfile.o \
   $K/kernelvec.o \
   $K/plic.o \
+  $K/sysinfo.o \
   $K/virtio_disk.o
 
 OBJS_KCSAN = \
@@ -194,8 +195,8 @@
 	$U/_grind\
 	$U/_wc\
 	$U/_zombie\
-
-
+	$U/_trace\
+	$U/_sysinfotest\
 
 
 ifeq ($(LAB),syscall)
Only in xv6-labs-2024-1/user: sysinfotest.c
Only in xv6-labs-2024-1/user: trace.c
diff -ru xv6-labs-2024/user/user.h xv6-labs-2024-1/user/user.h
--- xv6-labs-2024/user/user.h	2024-11-05 23:35:28.070060907 +0700
+++ xv6-labs-2024-1/user/user.h	2024-11-05 23:18:46.954907580 +0700
@@ -22,7 +22,7 @@
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
-
+int trace(int);
 // ulib.c
 int stat(const char*, struct stat*);
 char* strcpy(char*, const char*);
@@ -41,3 +41,6 @@
 // umalloc.c
 void* malloc(uint);
 void free(void*);
+
+struct sysinfo;
+int sysinfo(struct sysinfo *);
\ No newline at end of file
diff -ru xv6-labs-2024/user/usys.pl xv6-labs-2024-1/user/usys.pl
--- xv6-labs-2024/user/usys.pl	2024-11-05 23:35:28.073060887 +0700
+++ xv6-labs-2024-1/user/usys.pl	2024-11-05 23:18:43.935934878 +0700
@@ -36,3 +36,5 @@
 entry("sbrk");
 entry("sleep");
 entry("uptime");
+entry("trace");
+entry("sysinfo");
\ No newline at end of file
